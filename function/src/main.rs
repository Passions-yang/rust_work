
// Rust 函数的基本形式
/*
* fn <函数名> ( <参数> ) <函数体>
* 命名风格是小写字母以下划线分割
*/

// 函数参数
/**
 * Rust 中定义函数如果需要具备参数必须声明参数名称和类型
 */

// 语句
/**
 * 语句是执行某些操作且没有返回值的步骤。
 */

// 表达式
/**
 *  表达式是语句的一部分，表达式的结果是表达式块所代表的值，具有返回值
 * 
 */

// 函数返回值
/**
 * 
 *  Rust 函数声明返回值类型的方式：在参数声明之后用 -> 来声明函数返回值的类型（不是 : ）
 */

fn five() -> i32 {  // -> i32 表明返回一个有符号32位整型
    5  // 此处就是一个表达式
}

fn main() {
    let x = 5;

    let y = {  // 此大括号中间的语句叫 函数表达式
        let x = 3; 
        x + 1   // 此语句就是一个表达式，如有具有分号的话，就变成了语句，并且没有返回值
    };
    let a = five();
    println!("a 的值为 : {}", a);
    println!("x 的值为 : {}", x);
    println!("y 的值为 : {}", y);

    println!("Hello, world!");
}
